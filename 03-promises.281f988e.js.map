{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAGhCI,EAAW,CAEfC,SAAS,GAmBX,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,SAAUA,EAAUC,MAAOA,IAEpCG,EAAO,CAACJ,SAAUA,EAAUC,MAAOA,MAEpCA,MAzBPX,EAAKC,KAAKkB,iBAAiB,UAAU,SAACC,GACpCA,EAAEC,iBAGF,IAFF,IAA4BC,EA4BnB,CACLX,MAAOY,OAAOvB,EAAKI,WAAWoB,OAC9BC,KAAMF,OAAOvB,EAAKK,UAAUmB,OAC5BE,OAAQH,OAAOvB,EAAKM,YAAYkB,QA/B/BG,EAAuBL,EAAvBX,MAAOc,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OAEPE,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACvDnB,EAAcmB,EAAUD,GACvBE,MAAK,SAAAC,G,IAAEpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAChBoB,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,MAAKJ,MAE5E4B,OAAM,SAAAL,G,IAAEpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,MAAKJ,MAE1EoB,GAAgBF,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst notiflix = {\n  // timeout: 2800,\n  useIcon: false,\n};\n \nrefs.form.addEventListener('submit', (e) =>{\n  e.preventDefault();\nlet {delay, step, amount} = readingData();\n  \n  for (let position = 1; position <= amount; position += 1) {\n  createPromise(position, delay)\n  .then(({position, delay}) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, notiflix);\n  })\n  .catch(({position, delay}) =>{\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, notiflix);\n  });\n  delay = delay + step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=>{\n      if (shouldResolve) {\n        resolve({position: position, delay: delay});\n      } else {\n        reject({position: position, delay: delay});\n      }\n    }, delay)\n  })\n}\n\nfunction readingData(){\n  return {\n    delay: Number(refs.inputDelay.value), \n    step: Number(refs.inputStep.value), \n    amount: Number(refs.inputAmount.value),\n  };\n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$notiflix","useIcon","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","ref","Number","value","step","amount","delay1","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.281f988e.js.map"}